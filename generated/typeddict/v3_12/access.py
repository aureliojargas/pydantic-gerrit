# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/access.json
#   timestamp: 2025-09-16T21:42:28+00:00

from __future__ import annotations

from typing import Any, Literal, TypedDict

from typing_extensions import NotRequired


class Rules(TypedDict):
    """
    Rule definition keyed by group UUID
    """

    action: NotRequired[Literal['ALLOW', 'DENY', 'BLOCK', 'INTERACTIVE', 'BATCH']]
    force: NotRequired[bool]
    min: NotRequired[int]
    max: NotRequired[int]


class Permissions(TypedDict):
    """
    Permission definition
    """

    rules: NotRequired[dict[str, Rules]]
    label: NotRequired[str]
    exclusive: NotRequired[bool]


class Options(TypedDict):
    """
    Group options
    """

    visible_to_all: NotRequired[bool]


class Groups(TypedDict):
    """
    Group information
    """

    url: NotRequired[str]
    options: NotRequired[Options]
    description: NotRequired[str]


class Local(TypedDict):
    """
    Access section keyed by ref pattern
    """

    permissions: NotRequired[dict[str, Permissions]]
    groups: NotRequired[dict[str, Groups]]


WebLinkInfo = Any


class InheritsFrom(TypedDict):
    """
    Project from which these access rights are inherited
    """

    id: NotRequired[str]
    description: NotRequired[str]
    web_links: NotRequired[list[WebLinkInfo]]


class AccessRightsInfo(TypedDict):
    """
    Access rights information for projects
    """

    revision: NotRequired[str]
    inheritsFrom: NotRequired[InheritsFrom]
    local: NotRequired[dict[str, Local]]
