# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/projects.json
#   timestamp: 2025-09-16T20:49:32+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, Optional


class State(Enum):
    """
    The state of the project
    """

    ACTIVE = 'ACTIVE'
    READ_ONLY = 'READ_ONLY'
    HIDDEN = 'HIDDEN'


@dataclass
class WebLink:
    name: Optional[str]
    url: Optional[str]
    target: Optional[str]


class SubmitType(Enum):
    """
    The submit type for the project
    """

    MERGE_IF_NECESSARY = 'MERGE_IF_NECESSARY'
    FAST_FORWARD_ONLY = 'FAST_FORWARD_ONLY'
    REBASE_IF_NECESSARY = 'REBASE_IF_NECESSARY'
    REBASE_ALWAYS = 'REBASE_ALWAYS'
    MERGE_ALWAYS = 'MERGE_ALWAYS'
    CHERRY_PICK = 'CHERRY_PICK'


@dataclass
class Commentlinks:
    match: Optional[str]
    link: Optional[str]
    html: Optional[str]
    enabled: Optional[bool]


@dataclass
class Actions:
    method: Optional[str]
    label: Optional[str]
    title: Optional[str]
    enabled: Optional[bool]


@dataclass
class Config:
    """
    The project configuration
    """

    max_object_size_limit: Optional[str]
    submit_type: Optional[SubmitType]
    state: Optional[State]
    commentlinks: Optional[dict[str, Commentlinks]]
    plugin_config: Optional[dict[str, Any]]
    actions: Optional[dict[str, Actions]]


ProjectInfo = Any


LabelInfo = Any


BranchInfo = Any


@dataclass
class ProjectInfoModel:
    """
    Project information from Gerrit
    """

    id: str
    name: str
    parent: Optional[ProjectInfo]
    description: Optional[str]
    state: Optional[State]
    labels: Optional[dict[str, LabelInfo]]
    web_links: Optional[list[WebLink]]
    themes: Optional[list[str]]
    branches: Optional[list[BranchInfo]]
    config: Optional[Config]
