# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/projects.json
#   timestamp: 2025-09-16T21:42:28+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any


class State(Enum):
    """
    The state of the project
    """

    ACTIVE = 'ACTIVE'
    READ_ONLY = 'READ_ONLY'
    HIDDEN = 'HIDDEN'


@dataclass
class WebLink:
    name: str | None
    url: str | None
    target: str | None


class SubmitType(Enum):
    """
    The submit type for the project
    """

    MERGE_IF_NECESSARY = 'MERGE_IF_NECESSARY'
    FAST_FORWARD_ONLY = 'FAST_FORWARD_ONLY'
    REBASE_IF_NECESSARY = 'REBASE_IF_NECESSARY'
    REBASE_ALWAYS = 'REBASE_ALWAYS'
    MERGE_ALWAYS = 'MERGE_ALWAYS'
    CHERRY_PICK = 'CHERRY_PICK'


@dataclass
class Commentlinks:
    match: str | None
    link: str | None
    html: str | None
    enabled: bool | None


@dataclass
class Actions:
    method: str | None
    label: str | None
    title: str | None
    enabled: bool | None


@dataclass
class Config:
    """
    The project configuration
    """

    max_object_size_limit: str | None
    submit_type: SubmitType | None
    state: State | None
    commentlinks: dict[str, Commentlinks] | None
    plugin_config: dict[str, Any] | None
    actions: dict[str, Actions] | None


ProjectInfo = Any


LabelInfo = Any


BranchInfo = Any


@dataclass
class ProjectInfoModel:
    """
    Project information from Gerrit
    """

    id: str
    name: str
    parent: ProjectInfo | None
    description: str | None
    state: State | None
    labels: dict[str, LabelInfo] | None
    web_links: list[WebLink] | None
    themes: list[str] | None
    branches: list[BranchInfo] | None
    config: Config | None
