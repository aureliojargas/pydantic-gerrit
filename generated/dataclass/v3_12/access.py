# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/access.json
#   timestamp: 2025-09-16T20:49:32+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, Optional


class Action(Enum):
    """
    Action of this rule
    """

    ALLOW = 'ALLOW'
    DENY = 'DENY'
    BLOCK = 'BLOCK'
    INTERACTIVE = 'INTERACTIVE'
    BATCH = 'BATCH'


@dataclass
class Rules:
    """
    Rule definition keyed by group UUID
    """

    action: Optional[Action]
    force: Optional[bool]
    min: Optional[int]
    max: Optional[int]


@dataclass
class Permissions:
    """
    Permission definition
    """

    rules: Optional[dict[str, Rules]]
    label: Optional[str]
    exclusive: Optional[bool]


@dataclass
class Options:
    """
    Group options
    """

    visible_to_all: Optional[bool]


@dataclass
class Groups:
    """
    Group information
    """

    url: Optional[str]
    options: Optional[Options]
    description: Optional[str]


@dataclass
class Local:
    """
    Access section keyed by ref pattern
    """

    permissions: Optional[dict[str, Permissions]]
    groups: Optional[dict[str, Groups]]


WebLinkInfo = Any


@dataclass
class InheritsFrom:
    """
    Project from which these access rights are inherited
    """

    id: Optional[str]
    description: Optional[str]
    web_links: Optional[list[WebLinkInfo]]


@dataclass
class AccessRightsInfo:
    """
    Access rights information for projects
    """

    revision: Optional[str]
    inheritsFrom: Optional[InheritsFrom]
    local: Optional[dict[str, Local]]
