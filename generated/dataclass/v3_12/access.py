# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/access.json
#   timestamp: 2025-09-16T21:42:27+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any


class Action(Enum):
    """
    Action of this rule
    """

    ALLOW = 'ALLOW'
    DENY = 'DENY'
    BLOCK = 'BLOCK'
    INTERACTIVE = 'INTERACTIVE'
    BATCH = 'BATCH'


@dataclass
class Rules:
    """
    Rule definition keyed by group UUID
    """

    action: Action | None
    force: bool | None
    min: int | None
    max: int | None


@dataclass
class Permissions:
    """
    Permission definition
    """

    rules: dict[str, Rules] | None
    label: str | None
    exclusive: bool | None


@dataclass
class Options:
    """
    Group options
    """

    visible_to_all: bool | None


@dataclass
class Groups:
    """
    Group information
    """

    url: str | None
    options: Options | None
    description: str | None


@dataclass
class Local:
    """
    Access section keyed by ref pattern
    """

    permissions: dict[str, Permissions] | None
    groups: dict[str, Groups] | None


WebLinkInfo = Any


@dataclass
class InheritsFrom:
    """
    Project from which these access rights are inherited
    """

    id: str | None
    description: str | None
    web_links: list[WebLinkInfo] | None


@dataclass
class AccessRightsInfo:
    """
    Access rights information for projects
    """

    revision: str | None
    inheritsFrom: InheritsFrom | None
    local: dict[str, Local] | None
