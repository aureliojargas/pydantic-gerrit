# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/revisions.json
#   timestamp: 2025-09-16T21:42:27+00:00

from __future__ import annotations

from enum import Enum
from typing import Any

from pydantic import AwareDatetime, BaseModel, Field, RootModel


class Kind(Enum):
    """
    The change kind
    """

    REWORK = 'REWORK'
    TRIVIAL_REBASE = 'TRIVIAL_REBASE'
    MERGE_FIRST_PARENT_UPDATE = 'MERGE_FIRST_PARENT_UPDATE'
    NO_CODE_CHANGE = 'NO_CODE_CHANGE'
    NO_CHANGE = 'NO_CHANGE'


class Fetch(BaseModel):
    url: str | None
    ref: str | None
    commands: dict[str, str] | None


class AccountInfo(RootModel[Any]):
    root: Any


class CommitInfo(RootModel[Any]):
    root: Any


class FileInfo(RootModel[Any]):
    root: Any


class RevisionInfo(BaseModel):
    """
    Information about a specific revision of a change
    """

    kind: Kind | None = Field(None, description='The change kind')
    number: int | None = Field(None, description='The patch set number')
    created: AwareDatetime | None = Field(None, description='The timestamp of when the patch set was created')
    uploader: AccountInfo | None = Field(None, description='The uploader of the patch set')
    ref: str | None = Field(None, description='The Git reference for the patch set')
    fetch: dict[str, Fetch] | None = Field(None, description='Information for fetching this patch set')
    commit: CommitInfo | None = Field(None, description='The commit of this revision')
    files: dict[str, FileInfo] | None = Field(None, description='The files in the patch set')
