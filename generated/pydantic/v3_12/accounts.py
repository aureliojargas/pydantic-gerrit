# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/accounts.json
#   timestamp: 2025-09-16T20:49:31+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import AwareDatetime, BaseModel, Field


class Avatar(BaseModel):
    url: Optional[str] = Field(None, description='URL to the avatar image')
    height: Optional[int] = Field(
        None, description='Height of the avatar image in pixels'
    )


class State(Enum):
    """
    State of the account
    """

    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class DateFormat(Enum):
    """
    Date format preference
    """

    STD = 'STD'
    US = 'US'
    ISO = 'ISO'
    EURO = 'EURO'
    UK = 'UK'


class TimeFormat(Enum):
    """
    Time format preference
    """

    HHMM_12 = 'HHMM_12'
    HHMM_24 = 'HHMM_24'


class DiffView(Enum):
    """
    Default diff view
    """

    SIDE_BY_SIDE = 'SIDE_BY_SIDE'
    UNIFIED_DIFF = 'UNIFIED_DIFF'


class ReviewCategoryStrategy(Enum):
    """
    Default strategy for showing review categories
    """

    NONE = 'NONE'
    NAME = 'NAME'
    EMAIL = 'EMAIL'
    USERNAME = 'USERNAME'
    ABBREV = 'ABBREV'


class Preferences(BaseModel):
    """
    Account preferences
    """

    changes_per_page: Optional[int] = Field(
        None, description='Number of changes to show per page'
    )
    show_site_header: Optional[bool] = Field(
        None, description='Whether to show the site header'
    )
    use_flash_clipboard: Optional[bool] = Field(
        None, description='Whether to use the Flash clipboard widget'
    )
    date_format: Optional[DateFormat] = Field(
        None, description='Date format preference'
    )
    time_format: Optional[TimeFormat] = Field(
        None, description='Time format preference'
    )
    relative_date_in_change_table: Optional[bool] = Field(
        None, description='Whether to show relative dates in change tables'
    )
    diff_view: Optional[DiffView] = Field(None, description='Default diff view')
    size_bar_in_change_table: Optional[bool] = Field(
        None, description='Whether to show the file size bars in change tables'
    )
    review_category_strategy: Optional[ReviewCategoryStrategy] = Field(
        None, description='Default strategy for showing review categories'
    )
    my_menu_items: Optional[list[str]] = Field(
        None, description="Menu items to show in the 'My' menu"
    )


class AccountInfo(BaseModel):
    """
    Account information for Gerrit users
    """

    field_account_id: int = Field(
        ..., alias='_account_id', description='The numeric ID of the account'
    )
    name: Optional[str] = Field(None, description='The full name of the user')
    email: Optional[str] = Field(
        None, description='The preferred email address of the account'
    )
    secondary_emails: Optional[list[str]] = Field(
        None, description='A list of secondary email addresses of the account'
    )
    username: Optional[str] = Field(None, description='The username of the account')
    display_name: Optional[str] = Field(
        None, description='The display name of the account'
    )
    status: Optional[str] = Field(None, description='The status message of the account')
    inactive: Optional[bool] = Field(
        None, description='Whether the account is inactive'
    )
    tags: Optional[list[str]] = Field(None, description='A list of account tags')
    avatars: Optional[list[Avatar]] = Field(None, description='List of avatar images')
    registered_on: Optional[AwareDatetime] = Field(
        None, description='Timestamp of when the account was registered'
    )
    state: Optional[State] = Field(None, description='State of the account')
    http_password: Optional[str] = Field(
        None, description='HTTP password for authentication with the Gerrit REST API'
    )
    preferences: Optional[Preferences] = Field(None, description='Account preferences')
