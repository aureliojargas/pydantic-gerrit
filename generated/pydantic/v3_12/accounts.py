# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/accounts.json
#   timestamp: 2025-09-16T21:42:27+00:00

from __future__ import annotations

from enum import Enum

from pydantic import AwareDatetime, BaseModel, Field


class Avatar(BaseModel):
    url: str | None = Field(None, description='URL to the avatar image')
    height: int | None = Field(None, description='Height of the avatar image in pixels')


class State(Enum):
    """
    State of the account
    """

    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class DateFormat(Enum):
    """
    Date format preference
    """

    STD = 'STD'
    US = 'US'
    ISO = 'ISO'
    EURO = 'EURO'
    UK = 'UK'


class TimeFormat(Enum):
    """
    Time format preference
    """

    HHMM_12 = 'HHMM_12'
    HHMM_24 = 'HHMM_24'


class DiffView(Enum):
    """
    Default diff view
    """

    SIDE_BY_SIDE = 'SIDE_BY_SIDE'
    UNIFIED_DIFF = 'UNIFIED_DIFF'


class ReviewCategoryStrategy(Enum):
    """
    Default strategy for showing review categories
    """

    NONE = 'NONE'
    NAME = 'NAME'
    EMAIL = 'EMAIL'
    USERNAME = 'USERNAME'
    ABBREV = 'ABBREV'


class Preferences(BaseModel):
    """
    Account preferences
    """

    changes_per_page: int | None = Field(None, description='Number of changes to show per page')
    show_site_header: bool | None = Field(None, description='Whether to show the site header')
    use_flash_clipboard: bool | None = Field(None, description='Whether to use the Flash clipboard widget')
    date_format: DateFormat | None = Field(None, description='Date format preference')
    time_format: TimeFormat | None = Field(None, description='Time format preference')
    relative_date_in_change_table: bool | None = Field(
        None, description='Whether to show relative dates in change tables'
    )
    diff_view: DiffView | None = Field(None, description='Default diff view')
    size_bar_in_change_table: bool | None = Field(
        None, description='Whether to show the file size bars in change tables'
    )
    review_category_strategy: ReviewCategoryStrategy | None = Field(
        None, description='Default strategy for showing review categories'
    )
    my_menu_items: list[str] | None = Field(None, description="Menu items to show in the 'My' menu")


class AccountInfo(BaseModel):
    """
    Account information for Gerrit users
    """

    field_account_id: int = Field(..., alias='_account_id', description='The numeric ID of the account')
    name: str | None = Field(None, description='The full name of the user')
    email: str | None = Field(None, description='The preferred email address of the account')
    secondary_emails: list[str] | None = Field(None, description='A list of secondary email addresses of the account')
    username: str | None = Field(None, description='The username of the account')
    display_name: str | None = Field(None, description='The display name of the account')
    status: str | None = Field(None, description='The status message of the account')
    inactive: bool | None = Field(None, description='Whether the account is inactive')
    tags: list[str] | None = Field(None, description='A list of account tags')
    avatars: list[Avatar] | None = Field(None, description='List of avatar images')
    registered_on: AwareDatetime | None = Field(None, description='Timestamp of when the account was registered')
    state: State | None = Field(None, description='State of the account')
    http_password: str | None = Field(None, description='HTTP password for authentication with the Gerrit REST API')
    preferences: Preferences | None = Field(None, description='Account preferences')
