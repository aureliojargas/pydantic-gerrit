# generated by datamodel-codegen:
#   filename:  /workspaces/pydantic-gerrit/schemas/v3_12/../../schemas/v3_12/groups.json
#   timestamp: 2025-09-16T20:49:32+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Optional

from pydantic import AwareDatetime, BaseModel, Field, RootModel


class Options(BaseModel):
    """
    Options of the group
    """

    visible_to_all: Optional[bool] = Field(
        None, description='Whether the group is visible to all registered users'
    )


class Type(Enum):
    """
    Type of the audit event
    """

    ADD_USER = 'ADD_USER'
    REMOVE_USER = 'REMOVE_USER'
    ADD_GROUP = 'ADD_GROUP'
    REMOVE_GROUP = 'REMOVE_GROUP'


class GroupInfo(RootModel[Any]):
    root: Any


class AccountInfo(RootModel[Any]):
    root: Any


class AuditLogItem(BaseModel):
    member: Optional[AccountInfo] = Field(
        None, description='Account that was added/removed'
    )
    type: Optional[Type] = Field(None, description='Type of the audit event')
    user: Optional[AccountInfo] = Field(
        None, description='User that performed the action'
    )
    date: Optional[AwareDatetime] = Field(
        None, description='Timestamp of when the action was performed'
    )


class GroupInfoModel(BaseModel):
    """
    Group information from Gerrit
    """

    id: str = Field(..., description='The UUID of the group')
    name: str = Field(..., description='The name of the group')
    url: Optional[str] = Field(None, description='URL to information about the group')
    options: Optional[Options] = Field(None, description='Options of the group')
    description: Optional[str] = Field(None, description='The description of the group')
    group_id: Optional[int] = Field(None, description='The numeric ID of the group')
    owner: Optional[GroupInfo] = Field(None, description='The owner group')
    owner_id: Optional[str] = Field(
        None, description='The UUID of the owner group (legacy field)'
    )
    created_on: Optional[AwareDatetime] = Field(
        None, description='The timestamp of when the group was created'
    )
    members: Optional[list[AccountInfo]] = Field(
        None, description='Members of the group'
    )
    includes: Optional[list[GroupInfo]] = Field(
        None, description='Groups that are included in this group'
    )
    members_count: Optional[int] = Field(
        None, description='Number of members in the group'
    )
    includes_count: Optional[int] = Field(
        None, description='Number of groups included in this group'
    )
    field_more_groups: Optional[bool] = Field(
        None, alias='_more_groups', description='Whether more groups are available'
    )
    audit_log: Optional[list[AuditLogItem]] = Field(
        None, description='The audit log of the group'
    )
